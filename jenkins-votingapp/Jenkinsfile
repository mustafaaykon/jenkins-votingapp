pipeline {
    agent any
    stages {
        stage ('Build') {
            steps {
                sh 'printenv'
            }
        }
        stage ('Push ECR') {
            steps {
                withEnv (['AWS_ACCESS_KEY_ID=${env.ACCESS_KEY_ID}', 'AWS_SECRET_ACCESS_KEY=${env.SECRET_ACCESS_KEY}', 'AWS_DEFAULT_REGION=${env.REGION}', 'ECR_REPO_REGISTRY=${env.ECR_REPO_REGISTRY}'])
                {
                    sh 'aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPO_REGISTRY'
                    sh 'docker build -t --platform=linux/amd64 ECR_REPO_REGISTRY/jenkins_votingapp_vote:latest ./vote'
                    sh 'docker build -t --platform=linux/amd64 ECR_REPO_REGISTRY/jenkins_votingapp_worker:latest ./worker'
                    sh 'docker build -t --platform=linux/amd64 ECR_REPO_REGISTRY/jenkins_votingapp_result:latest ./result'
                    sh 'docker tag $ECR_REPO_REGISTRY/jenkins_votingapp_vote:latest $ECR_REPO_REGISTRY/jenkins_votingapp_vote:""$BUILD_ID""'
                    sh 'docker tag $ECR_REPO_REGISTRY/jenkins_votingapp_worker:latest $ECR_REPO_REGISTRY/jenkins_votingapp_worker:""$BUILD_ID""'
                    sh 'docker tag $ECR_REPO_REGISTRY/jenkins_votingapp_result:latest $ECR_REPO_REGISTRY/jenkins_votingapp_result:""$BUILD_ID""'
                    sh 'docker push $ECR_REPO_REGISTRY/jenkins_votingapp_vote:latest' 
                    sh 'docker push $ECR_REPO_REGISTRY/jenkins_votingapp_vote:$""$BUILD_ID""'
                    sh 'docker push $ECR_REPO_REGISTRY/jenkins_votingapp_worker:latest' 
                    sh 'docker push $ECR_REPO_REGISTRY/jenkins_votingapp_worker:$""$BUILD_ID""'
                    sh 'docker push $ECR_REPO_REGISTRY/jenkins_votingapp_result:latest' 
                    sh 'docker push $ECR_REPO_REGISTRY/jenkins_votingapp_result:$""$BUILD_ID""'                    
                }
            }
        }
    }
}
