pipeline {
    agent {    
        kubernetes {
          yaml '''
            apiVersion: v1
            kind: Pod
            spec:
              containers:
              - name: docker
                image: docker:latest
                command:
                - cat
                tty: true
                volumeMounts:
                 - mountPath: /var/run/docker.sock
                   name: docker-sock             
              volumes:
              - name: docker-sock
                hostPath:
                  path: /var/run/docker.sock

            '''
        }
    }
    environment {
        ECR_REPO_REGISTRY = '762247940679.dkr.ecr.us-east-1.amazonaws.com'
    }
    stages {

        stage ('Build') {
            steps {
                    script {
                        container('docker') {
                            sh 'apk add --no-cache \
                                python3 \
                                py3-pip \
                                && pip3 install --upgrade pip \
                                && pip3 install --no-cache-dir \
                                awscli \
                                && rm -rf /var/cache/apk/*'
                            sh 'aws --version'                               

                            sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin"${ECR_REPO_REGISTRY}"" '
                            sh 'docker build -t "${ECR_REPO_REGISTRY}"/jenkins_votingapp_vote ./jenkins-votingapp/vote'
                            sh 'docker build -t "${ECR_REPO_REGISTRY}"/jenkins_votingapp_result ./jenkins-votingapp/result'
                            sh 'docker build -t "${ECR_REPO_REGISTRY}"/jenkins_votingapp_worker ./jenkins-votingapp/worker'

                            sh 'docker tag "${ECR_REPO_REGISTRY}"/jenkins_votingapp_vote:latest "${ECR_REPO_REGISTRY}"/jenkins_votingapp_vote:""$BUILD_ID""'
                            sh 'docker tag "${ECR_REPO_REGISTRY}"/jenkins_votingapp_result:latest "${ECR_REPO_REGISTRY}"/jenkins_votingapp_result:""$BUILD_ID""'
                            sh 'docker tag "${ECR_REPO_REGISTRY}"/jenkins_votingapp_worker:latest "${ECR_REPO_REGISTRY}"/jenkins_votingapp_worker:""$BUILD_ID""'

                            // sh 'docker push "${ECR_REPO_REGISTRY}"/jenkins_votingapp_vote:latest'
                            // sh 'docker push "${ECR_REPO_REGISTRY}"/jenkins_votingapp_vote:""$BUILD_ID""'
                            // sh 'docker push "${ECR_REPO_REGISTRY}"/jenkins_votingapp_result:latest'
                            // sh 'docker push "${ECR_REPO_REGISTRY}"/jenkins_votingapp_result:""$BUILD_ID""'
                            // sh 'docker push "${ECR_REPO_REGISTRY}"/jenkins_votingapp_worker:latest'
                            // sh 'docker push "${ECR_REPO_REGISTRY}"/jenkins_votingapp_worker:""$BUILD_ID""'                                                        
                        }                       
                }       
            }
        }

        stage ('Push to ECR') {
            steps {
                script {
                    container('docker') {

                            sh 'docker push "${ECR_REPO_REGISTRY}"/jenkins_votingapp_vote:latest'
                            sh 'docker push "${ECR_REPO_REGISTRY}"/jenkins_votingapp_vote:""$BUILD_ID""'
                            sh 'docker push "${ECR_REPO_REGISTRY}"/jenkins_votingapp_result:latest'
                            sh 'docker push "${ECR_REPO_REGISTRY}"/jenkins_votingapp_result:""$BUILD_ID""'
                            sh 'docker push "${ECR_REPO_REGISTRY}"/jenkins_votingapp_worker:latest'
                            sh 'docker push "${ECR_REPO_REGISTRY}"/jenkins_votingapp_worker:""$BUILD_ID""' 
                    }
                }
            }
        }
    } 
}